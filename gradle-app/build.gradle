plugins {
    id "java"
    id "java-library"
    id "idea"
    id "maven-publish"
    id "com.github.spotbugs" version "3.0.0"
    id "com.diffplug.gradle.spotless" version "3.27.1"
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

ext {
    moduleName = "com.biz.devicectrl"
}

group = "com.biz"
version = "0.1.0"
sourceCompatibility = 8

repositories {
    mavenLocal()
    maven { url "https://maven.aliyun.com/repository/public/" }
    maven { url "https://maven.aliyun.com/repository/spring/" }
    maven { url "https://maven.aliyun.com/repository/google/" }
    mavenCentral()
}

dependencies {
    implementation "io.netty:netty-all:${nettyVersion}"

    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jApiVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${jupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
    testImplementation "org.hamcrest:hamcrest-library:${hamcrestLibraryVersion}"

    compileOnly "org.jetbrains:annotations:${jetbrainsAnnotationVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs.addAll([
        ])
        classpath = files()
    }
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "${nexusUrl}/repository/maven-releases/"
            def snapshotsRepoUrl = "${nexusUrl}/repository/maven-snapshots/"
            def isSnapshot = version.endsWith("SNAPSHOT")
            url = isSnapshot ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = nexusUsername
                password = nexusPassword
            }
        }
    }
}

//noinspection UnnecessaryQualifiedReference
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotless {
    format "misc", {
        target '**/*.gradle', '**/*.md', '**/.gitignore'

        trimTrailingWhitespace()
        endWithNewline()
    }
    java {
        removeUnusedImports()
        googleJavaFormat()
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.biz.devicectrl.main.SimpleEPlatControlServer'
    }
}
