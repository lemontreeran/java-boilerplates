buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.9")
        classpath("com.diffplug.spotless:spotless-plugin-gradle:3.18.0")
        classpath "gradle.plugin.com.arenagod.gradle:mybatis-generator-plugin:1.3"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "com.github.spotbugs"
    apply plugin: "com.diffplug.gradle.spotless"

    repositories {
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        mavenCentral()
    }

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    // 设置源代码路径
    sourceSets {
        main {
            java {
                srcDir "src/main/java"
            }
            resources {
                srcDir "src/main/resources"
                srcDir "src/main/java"
                exclude "**/*.java"
            }
        }
        test {
            java {
                srcDir "src/test/java"
            }
            resources {
                srcDir "src/test/resources"
                srcDir "src/test/java"
                exclude "**/*.java"
            }
        }
    }

    group = 'wx'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencies {
        // 通用依赖
        annotationProcessor('org.projectlombok:lombok:1.18.4')
        compile('org.projectlombok:lombok:1.18.4')
        compile('com.auth0:java-jwt:3.3.0')
        compile('org.jetbrains:annotations:15.0')
        implementation('com.kenai.nbpwr:edu-umd-cs-findbugs-annotations:1.3.2-201002241900')
        runtimeOnly('mysql:mysql-connector-java:8.0.16')
        compile 'commons-io:commons-io:2.5'

        // Spring 相关依赖
        implementation('org.springframework.boot:spring-boot-starter-actuator')
        implementation('org.springframework.boot:spring-boot-starter-web')
        implementation('org.springframework.boot:spring-boot-starter-aop')
        implementation('org.springframework.boot:spring-boot-starter-security')
        compile('io.springfox:springfox-swagger2:2.9.2')
        compile('io.springfox:springfox-swagger-ui:2.9.2')
        compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
        compile('tk.mybatis:mapper:3.3.9')
        compile('javax.activation:activation:1.1')
        developmentOnly("org.springframework.boot:spring-boot-devtools")

        // 第三方依赖
        implementation('com.github.docker-java:docker-java:3.1.1')
        compile('com.aliyun.oss:aliyun-sdk-oss:2.8.3')
        implementation('com.github.oshi:oshi-core:3.13.0')
        compile('net.java.dev.jna:jna:5.2.0')
        compile('net.java.dev.jna:jna-platform:5.2.0')
        implementation('org.apache.commons:commons-compress:1.18')
        compile 'commons-io:commons-io:2.5'
        compile("com.github.pagehelper:pagehelper:4.1.0")
        implementation('io.vavr:vavr:1.0.0-alpha-2')

        // 开发、测试相关依赖
        developmentOnly("org.springframework.boot:spring-boot-devtools")
        testCompile('org.junit.jupiter:junit-jupiter-api:5.4.0')
        testCompile('org.junit.jupiter:junit-jupiter-params:5.4.0')
        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.0')
        testRuntime('org.mybatis.spring.boot:mybatis-spring-boot-starter-test:1.3.2')
        testImplementation('mysql:mysql-connector-java:8.0.16')
        testImplementation('org.springframework.boot:spring-boot-starter-test')
        testImplementation("org.springframework.security:spring-security-test")

    }


    spotbugs {
        includeFilter = file("${rootDir}/spotbugs-filter.xml")
    }

    tasks.withType(com.github.spotbugs.SpotBugsTask) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    spotless {
        format 'misc', {
            target '**/*.gradle', '**/*.md', '**/.gitignore'

            trimTrailingWhitespace()
            endWithNewline()
        }
        java {
            removeUnusedImports()
            googleJavaFormat()
        }
        sql {
            target '**/*.sql'
            dbeaver()
        }
        freshmark {
            target 'README.md', 'CONTRIBUTING.md'
        }
    }


}

// 服务模块，执行逻辑与数据访问
project(':sbp-start') {
    apply plugin: 'org.springframework.boot'

    defaultTasks 'check', 'bootRun'

    springBoot {
        mainClassName = 'wx.Application'
    }

    bootRun {
        // ./gradlew bootRun -Pargs=--pid-file=/tmp/agent.pid
        if (project.hasProperty('args')) {
            args project.args.split(',')
        }
    }

    dependencies {
        compile(":sbp-mbg")
    }
}
